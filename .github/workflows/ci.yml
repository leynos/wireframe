name: CI

on:
  pull_request:
    branches: [main]

jobs:
  build-test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    env:
      CARGO_TERM_COLOR: always
      CS_ACCESS_TOKEN: ${{ secrets.CS_ACCESS_TOKEN }}
      CODESCENE_CLI_SHA256: ${{ vars.CODESCENE_CLI_SHA256 }}
      BUILD_PROFILE: debug
    steps:
      - uses: actions/checkout@v4
      - name: Install rust
        uses: actions-rust-lang/setup-rust-toolchain@9d7e65c320fdb52dcd45ffaa68deb6c02c8754d9
        with:
          override: true
          components: rustfmt, clippy
      - name: Cache ~/.cargo and target/
        # v2.7.8
        uses: Swatinem/rust-cache@9d47c6ad4b02e050fd481d890b2ea34778fd09d6
      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target/${{ env.BUILD_PROFILE }}
          key: ${{ runner.os }}-cargo-${{ env.BUILD_PROFILE }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-${{ env.BUILD_PROFILE }}-
      - name: Format
        run: cargo fmt --all -- --check
      - name: Lint
        run: cargo clippy --all-targets --all-features -- -D warnings
      - name: Test
        run: cargo test
      - name: Run coverage
        id: coverage
        uses: leynos/shared-actions/.github/actions/ratchet-coverage@v1.2.1
        with:
          args: --workspace --lcov --output-path lcov.info
      - name: Upload coverage data to CodeScene
        if: env.CS_ACCESS_TOKEN
        uses: leynos/shared-actions/.github/actions/upload-codescene-coverage@v1.2.1
        with:
          format: lcov
          access-token: ${{ env.CS_ACCESS_TOKEN }}
          installer-checksum: ${{ env.CODESCENE_CLI_SHA256 }}
      - name: Upload coverage data to Codecov
        # v5.4.3
        uses: codecov/codecov-action@18283e04ce6e62d37312384ff67231eb8fd56d24
        with:
          files: lcov.info

